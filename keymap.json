// 统一前缀按键(zed 默认是 cmd-k), 不能单独使用它们，否则会导致 zed 按键相应延迟:
// 1. ctrl-x: 与文件、窗口、pane 操作相关，如打开、关闭等；
// 2. ctrl-c: 与内容有关，如诊断、xref 等；
//
// 统一修饰键使用顺序：ctrl-cmd-alt-shift。
//
// 高频操作尽量使用短快捷键, 复杂或低频操作使用长快捷键。
// 有些按键定义 follow emacs 按键风格，可能会打破上面的惯例，如 ctrl-= 对应的是 ctrl--。
//
// shift 按键注意事项：
// 1. 如果 shift 后面是字母，OK。
// 2. 如果 shift 后面是第二按键，则直接使用第二按键（如 }) 而不要使用 shift（如不使用 shift-})。
//
// 使用 > 来定义父子（直接关系）context，使用 debug: open key contex view 命令来查看。
//
[
  {
    // Global context - 最低优先级
    "bindings": {
      /// 菜单控制
      "up": "menu::SelectPrev",
      "down": "menu::SelectNext",
      "ctrl-n": "menu::SelectNext",
      "ctrl-p": "menu::SelectPrev",
      "cmd-<": "menu::SelectFirst",
      "cmd->": "menu::SelectLast",
      "enter": "menu::Confirm",
      // 在 open recent project 等 Picker 中使用。
      "ctrl-enter": "menu::SecondaryConfirm",
      "cmd-enter": "menu::SecondaryConfirm",
      "escape": "menu::Cancel",
      "ctrl-g": ["workspace::SendKeystrokes", "escape"],

      /// Dock 面板
      "ctrl-x ctrl-a": "assistant::ToggleFocus",
      "ctrl-x ctrl-p": "project_panel::ToggleFocus",
      "ctrl-x ctrl-o": "outline_panel::ToggleFocus",
      "ctrl-x ctrl-`": "terminal_panel::ToggleFocus",
      "cmd-1": "workspace::ToggleLeftDock",
      "cmd-2": "workspace::ToggleBottomDock",
      "cmd-3": "workspace::ToggleRightDock",
      "ctrl-`": "workspace::ToggleBottomDock",

      /// 文件操作
      // workspace::Open 和 workspace::AddFolderToProject 对应的文件或目录必须存在。
      "ctrl-x ctrl-f": "workspace::Open",
      // 将文件或目录添加到 workspace，这样后续打开该 workspace 时文件或目录都还在。
      "ctrl-x ctrl-cmd-f": "workspace::AddFolderToProject",
      "ctrl-x ctrl-t": "workspace::OpenInTerminal",
      "ctrl-x ctrl-r": "editor::RevealInFileManager",
      "ctrl-x ctrl-s": "workspace::Save",
      "ctrl-x ctrl-w": "workspace::SaveAs",
      "ctrl-x ctrl-n": "workspace::NewFile",
      "ctrl-x 4 b": "workspace::NewFile",

      /// 命令和工具
      "ctrl-x p b": "branches::OpenRecent",
      "ctrl-x p f": "file_finder::Toggle",
      "ctrl-x p p": "projects::OpenRecent",
      "ctrl-x 5 b": "workspace::NewWindow",
      "ctrl-x 5 0": "workspace::CloseWindow",
      "ctrl-tab": "tab_switcher::Toggle",
      "ctrl-x b": "tab_switcher::Toggle",
      "ctrl-x ctrl-c": "zed::Quit",
      "cmd-x": "command_palette::Toggle",
      "ctrl-h k": "debug::OpenKeyContextView",
      "alt-c": "editor::OpenContextMenu"
    }
  },
  {
    // 优先级仅比 Global 高一级, 比其它 context 都低。
    "context": "Workspace",
    "bindings": {
      "escape": "workspace::Unfollow",
      "ctrl-g": "workspace::Unfollow",

      /// Pane Item 切换
      "ctrl-[": "pane::ActivatePrevItem",
      "ctrl-]": "pane::ActivateNextItem",
      "ctrl-0": "pane::ActivateLastItem",
      "ctrl-1": ["pane::ActivateItem", 0],
      "ctrl-2": ["pane::ActivateItem", 1],
      "ctrl-3": ["pane::ActivateItem", 2],
      "ctrl-4": ["pane::ActivateItem", 3],
      "ctrl-5": ["pane::ActivateItem", 4],
      "ctrl-6": ["pane::ActivateItem", 5],
      "ctrl-7": ["pane::ActivateItem", 6],
      "ctrl-8": ["pane::ActivateItem", 7],
      "ctrl-9": ["pane::ActivateItem", 8],

      /// 根据导航历史或选择历史移动(高频操作）
      "ctrl-,": "pane::GoBack",
      "ctrl-cmd-,": "pane::GoForward",
      "ctrl-.": "editor::UndoSelection",
      "ctrl-cmd-.": "editor::RedoSelection",

      /// Pane 操作
      "cmd-o": "workspace::ActivateNextPane",
      "ctrl-x o": "workspace::ActivateNextPane",
      "ctrl-cmd-o": "workspace::ActivatePreviousPane",
      "ctrl-x k": "pane::CloseActiveItem",
      "cmd-0": "pane::CloseActiveItem",
      "ctrl-x 0": "pane::CloseActiveItem",
      "ctrl-x 1": "workspace::ToggleZoom",
      "ctrl-x 2": "pane::SplitDown",
      "ctrl-x 3": "pane::SplitRight",
      "cmd-t": "workspace::NewFile",
      "cmd-shift-t": "pane::ReopenClosedItem",
      "ctrl-x ctrl-cmd-p": "pane::RevealInProjectPanel",
      "ctrl-x ctrl-=": "zed::IncreaseBufferFontSize",
      "ctrl-x ctrl--": "zed::DecreaseBufferFontSize",
      "ctrl-x ctrl-0": "zed::ResetBufferFontSize"
    }
  },
  {
    // 焦点位于编辑窗口或输入框时有效，终端窗口无效。
    // 优先级比 BufferSearchBar > Editor 等嵌套 Editor 低。
    "context": "Editor",
    "bindings": {
      "tab": "editor::Tab",
      "escape": "editor::Cancel",

      /// 光标移动
      "up": "editor::MoveUp",
      "down": "editor::MoveDown",
      "left": "editor::MoveLeft",
      "right": "editor::MoveRight",
      "ctrl-n": "editor::MoveDown",
      "ctrl-p": "editor::MoveUp",
      "ctrl-b": "editor::MoveLeft",
      "ctrl-f": "editor::MoveRight",
      "cmd-b": "editor::MoveToPreviousWordStart",
      "cmd-f": "editor::MoveToNextWordEnd",
      "ctrl-cmd-b": "editor::MoveToPreviousSubwordStart",
      "ctrl-cmd-f": "editor::MoveToNextSubwordEnd",
      "ctrl-a": "editor::MoveToBeginningOfLine",
      "ctrl-e": "editor::MoveToEndOfLine",
      "cmd-{": "editor::MoveToStartOfParagraph",
      "cmd-}": "editor::MoveToEndOfParagraph",
      "ctrl-v": ["editor::MovePageDown", { "center_cursor": true }],
      "cmd-v": ["editor::MovePageUp", { "center_cursor": true }],
      "cmd-<": "editor::MoveToBeginning",
      "cmd->": "editor::MoveToEnd",
      "ctrl-l": "editor::ScrollCursorCenterTopBottom",
      "cmd-%": "editor::MoveToEnclosingBracket",

      /// 选择操作
      "ctrl-shift-b": "editor::SelectLeft",
      "ctrl-shift-f": "editor::SelectRight",
      "cmd-shift-f": "editor::SelectToNextWordEnd",
      "cmd-shift-b": "editor::SelectToPreviousWordStart",
      "ctrl-space": "editor::SelectToNextWordEnd",
      // ctrl-cmd-space 默认被绑定到 MacOS 的 editor::ShowCharacterPalette，在插入 emoji 字符时需要。
      "ctrl-cmd-space": "editor::SelectToNextWordEnd",
      "ctrl-u ctrl-space": "editor::SelectToPreviousWordStart",
      "cmd-l": "editor::SelectLine",
      "ctrl-shift-a": ["editor::SelectToBeginningOfLine", { "stop_at_soft_wraps": true }],
      "ctrl-shift-e": ["editor::SelectToEndOfLine", { "stop_at_soft_wraps": true }],
      "ctrl-shift-p": "editor::SelectUp",
      "ctrl-shift-n": "editor::SelectDown",
      "ctrl-cmd-{": "editor::SelectToStartOfParagraph",
      "ctrl-cmd-}": "editor::SelectToEndOfParagraph",
      // 选中整个段落。
      "cmd-shift-h": ["workspace::SendKeystrokes", "cmd-{ ctrl-cmd-}"],
      "ctrl-cmd-<": "editor::SelectToBeginning",
      "ctrl-cmd->": "editor::SelectToEnd",
      "ctrl-x h": "editor::SelectAll",
      "ctrl-=": "editor::SelectLargerSyntaxNode",
      "ctrl--": "editor::SelectSmallerSyntaxNode",
      "cmd-@": "editor::SelectEnclosingSymbol",

      /// 多光标操作
      "ctrl-cmd-p": "editor::AddSelectionAbove",
      "ctrl-cmd-n": "editor::AddSelectionBelow",

      /// 剪切和粘贴
      "ctrl-w": "editor::Cut",
      "cmd-w": "editor::Copy",
      "cmd-c": "editor::Copy",
      "ctrl-y": "editor::Paste",

      /// 删除操作
      "backspace": "editor::Backspace",
      "cmd-backspace": "editor::DeleteToPreviousSubwordStart",
      "delete": "editor::Delete",
      "ctrl-d": "editor::Delete",
      "cmd-d": "editor::DeleteToNextWordEnd",
      // BUG: ctrl-cmd-d 按键不生效。
      "ctrl-u cmd-d": "editor::DeleteToPreviousWordStart",
      "ctrl-k": "editor::CutToEndOfLine",
      "ctrl-u ctrl-k": "editor::DeleteToBeginningOfLine",
      // 剪切当前行到剪切板：DeleteLine 不会存剪贴板，但又没有 CutLine 命令。
      "ctrl-cmd-k": ["workspace::SendKeystrokes", "ctrl-a ctrl-k ctrl-k"],
      // 删除连续的空格为一个。
      "cmd-space": ["workspace::SendKeystrokes", "cmd-b cmd-f cmd-shift-f cmd-shift-b backspace space"],
      // 删除连续的空行为一行。
      "cmd-\\": ["workspace::SendKeystrokes", "cmd-{ cmd-} ctrl-cmd-} ctrl-cmd-{ backspace"],

      // 行操作
      "ctrl-j": "editor::Newline",
      "ctrl-m": "editor::NewlineBelow",
      "cmd-up": "editor::MoveLineUp",
      "cmd-down": "editor::MoveLineDown",
      // DuplicateSelection: 如果有选择，则重复选择，否则重复当前行。
      "ctrl-cmd-l": "editor::DuplicateSelection",
      "cmd-^": "editor::JoinLines",
      "cmd-g cmd-g": "go_to_line::Toggle",

      /// 撤销和重做
      "ctrl-/": "editor::Undo",
      "ctrl-cmd-/": "editor::Redo",

      // buffer 内搜索
      "ctrl-s": "buffer_search::Deploy",
      // project 项目搜索
      "ctrl-cmd-s": "pane::DeploySearch",

      // 显式项目大纲
      "ctrl-o": "outline::Toggle",
      "ctrl-cmd-o": "project_symbols::Toggle",

      /// 代码开发功能
      "ctrl-\\": "editor::ShowCompletions",
      "cmd-h": "editor::ToggleInlayHints",
      "cmd-a": "editor::ToggleCodeActions",
      "cmd-r": "editor::Rename",
      "cmd-i": "editor::Hover",
      "ctrl-c ctrl-d": "editor::OpenDocs",
      "cmd-s": "editor::ShowSignatureHelp",
      "cmd-.": "editor::GoToDefinition",
      "ctrl-cmd-.": "editor::GoToDefinitionSplit",
      "cmd-,": "editor::GoToImplementation",
      "cmd-?": "editor::FindAllReferences",

      "cmd-e": "diagnostics::Deploy",
      "cmd-j": "editor::GoToDiagnostic",
      "cmd-k": "editor::GoToPrevDiagnostic",

      "alt-d": "editor::ToggleHunkDiff",
      "ctrl-alt-d": "editor::ExpandAllHunkDiffs",
      "alt-a": "editor::ApplyDiffHunk",
      "ctrl-alt-a": "editor::ApplyAllDiffHunks",
      "alt-r": "editor::RevertSelectedHunks",
      "alt-j": "editor::GoToHunk",
      "alt-k": "editor::GoToPrevHunk",

      // 注释和格式化
      "cmd-;": ["editor::ToggleComments", { "advance_downwards": false }],
      "ctrl-c ctrl-f": "editor::Format",

      // 缩进
      "cmd-[": "editor::Outdent",
      "cmd-]": "editor::Indent",

      /// 折叠
      "cmd-q": "editor::Rewrap",
      "ctrl-c ctrl-t": "editor::ToggleFold",
      "ctrl-c ctrl-u": "editor::UnfoldAll",
      "ctrl-c ctrl-1": ["editor::FoldAtLevel", { "level": 1 }],
      "ctrl-c ctrl-2": ["editor::FoldAtLevel", { "level": 2 }],
      "ctrl-c ctrl-3": ["editor::FoldAtLevel", { "level": 3 }],
      "ctrl-c ctrl-4": ["editor::FoldAtLevel", { "level": 4 }],
      "ctrl-c ctrl-5": ["editor::FoldAtLevel", { "level": 5 }]
    }
  },
  {
    // 编辑普通文件、编辑 assistant/multibuffer 时有效（mode 均为 full），与之对应的是 mode 为 single_line，是单行输入的场景。
    // 与 Editor 相同有优先级。
    "context": "Editor && mode == full",
    "bindings": {
      "enter": "editor::Newline",

      /// multibuffer 有效
      "ctrl-o": "editor::OpenExcerptsSplit",
      "ctrl-cmd-o": "editor::OpenExcerpts",
      "ctrl-=": "editor::ExpandExcerpts",
      "ctrl-cmd-=": "editor::ExpandExcerptsUp",

      /// assistant editor 有效，将 Editor 选中内容粘贴到 assistant editor
      "ctrl-cmd-]": "assistant::QuoteSelection",
      // 将 assistant editor 选择内容粘贴到 Editor 中当前位置
      "ctrl-cmd-[": "assistant::InsertIntoEditor",

      // AI inline 补全(在当前行插入一个 AI 输入行)。
      "ctrl-enter": "assistant::InlineAssist"
    }
  },
  {
    // 代码补全
    "context": "Editor && showing_completions",
    "bindings": {
      "enter": "editor::ConfirmCompletion",
      "tab": "editor::ComposeCompletion"
    }
  },
  {
    // 在有选择的情况下，改变选择范围。先使用带 shift 的按键触发选择，然后使用下面的快捷键来改变选择范围。
    "context": "Editor && selection",
    "bindings": {
      "ctrl-f": "editor::SelectRight",
      "ctrl-b": "editor::SelectLeft",
      "ctrl-n": "editor::SelectDown",
      "ctrl-p": "editor::SelectUp",
      "ctrl-a": "editor::SelectToBeginningOfLine",
      "ctrl-e": "editor::SelectToEndOfLine",
      "cmd-f": "editor::SelectToNextWordEnd",
      "cmd-b": "editor::SelectToPreviousWordStart",
      "cmd-{": "editor::SelectToStartOfParagraph",
      "cmd-}": "editor::SelectToEndOfParagraph",
      "cmd-<": "editor::SelectToBeginning",
      "cmd->": "editor::SelectToEnd"
    }
  },
  {
    // AI inline 补全
    "context": "Editor && inline_completion && !showing_completions",
    "bindings": {
      "tab": "editor::AcceptInlineCompletion"
    }
  },
  {
    // code actions
    "context": "Editor && showing_code_actions",
    "bindings": {
      "enter": "editor::ConfirmCodeAction"
    }
  },
  {
    // 代码补全或 code actions
    "context": "Editor && (showing_code_actions || showing_completions)",
    "bindings": {
      "up": "editor::ContextMenuPrev",
      "down": "editor::ContextMenuNext",
      "ctrl-n": "editor::ContextMenuNext",
      "ctrl-p": "editor::ContextMenuPrev",
      "cmd-<": "editor::ContextMenuFirst",
      "cmd->": "editor::ContextMenuLast"
    }
  },
  {
    "context": "Editor && renaming",
    "bindings": {
      "enter": "editor::ConfirmRename"
    }
  },
  {
    // 完成的 task
    "context": "Pane > EmptyPane",
    "bindings": {
      "q": "pane::CloseActiveItem"
    }
  },
  {
    "context": "Workspace && !Terminal",
    "bindings": {
      "ctrl-t": "task::Spawn",
      // 重新执行上次的 task
      "ctrl-cmd-t": "task::Rerun",
      // 打开 lazygit, "target": "center" 参数用于控制将终端 pane 全屏显示。
      "ctrl-x g": ["task::Spawn", { "task_name": "lazygit", "target": "center" }]
      // 快速切换输入法
      //"shift shift": ["task::Spawn", { "task_name": "switch-input-method" }]
    }
  },
  {
    "context": "Markdown",
    "bindings": {
      "cmd-w": "markdown::Copy"
    }
  },
  {
    // 搜索和替换
    "context": "BufferSearchBar",
    "bindings": {
      "escape": "buffer_search::Dismiss",
      "ctrl-g": "buffer_search::Dismiss",
      // 焦点从搜索框切换到编辑区域
      "tab": "buffer_search::FocusEditor",
      // 焦点聚焦到搜索框
      "ctrl-s": "search::FocusSearch",
      // 搜索历史记录
      "up": "search::PreviousHistoryQuery",
      "down": "search::NextHistoryQuery"
    }
  },
  {
    // 光标处于 Search 输入框时有效。
    // 每输入一个字符都会触发搜索(而 project search 是输入完成后按 enter 后才搜索)。
    "context": "BufferSearchBar && !in_replace > Editor",
    "bindings": {
      // 匹配导航
      "enter": "search::SelectNextMatch",
      "shift-enter": "search::SelectPrevMatch",
      "ctrl-n": "search::SelectNextMatch",
      "ctrl-p": "search::SelectPrevMatch",
      "ctrl-s": "search::SelectNextMatch",
      "ctrl-r": "search::SelectPrevMatch",
      // 搜索选项
      "cmd-w": "search::ToggleWholeWord",
      "cmd-x": "search::ToggleRegex",
      "cmd-r": "search::ToggleReplace",
      "cmd-c": "search::ToggleCaseSensitive",
      // 对匹配的所有项目启用多光标编辑
      "cmd-a": "search::SelectAllMatches",
      // 是否选中所有匹配项？如果不选中就不能前后匹配跳转。
      "cmd-s": "search::ToggleSelection"
    }
  },
  {
    // 替换框操作
    "context": "BufferSearchBar && in_replace > Editor",
    "bindings": {
      "enter": "search::ReplaceNext",
      "shift-enter": "search::ReplaceAll",
      // 对匹配的所有项目启用多光标编辑。
      "cmd-a": "search::SelectAllMatches"
    }
  },
  {
    // 项目范围搜索，搜索结果在 multibuffer 中显示。
    // 输入完整后按 enter 后才搜索，所以不能重定义 enter 按键。
    "context": "ProjectSearchBar",
    "bindings": {
      // 搜索控制
      "cmd-f": "project_search::ToggleFilters",
      // 新打开一个搜索 pane
      "cmd-enter": "project_search::SearchInNew"
    }
  },
  {
    "context": "ProjectSearchBar > Editor",
    "bindings": {
      // 焦点从搜索框移动到 Editor
      "escape": "project_search::ToggleFocus",
      "ctrl-g": "project_search::ToggleFocus",
      "tab": "project_search::ToggleFocus",
      // 搜索历史记录
      "up": "search::PreviousHistoryQuery",
      "down": "search::NextHistoryQuery",
      // 匹配导航
      "ctrl-n": "search::SelectNextMatch",
      "ctrl-p": "search::SelectPrevMatch",
      "ctrl-s": "search::SelectNextMatch",
      "ctrl-r": "search::SelectPrevMatch",
      // 搜索选项
      "cmd-r": "search::ToggleReplace",
      "cmd-x": "search::ToggleRegex",
      "cmd-c": "search::ToggleCaseSensitive",
      "cmd-w": "search::ToggleWholeWord",
      "cmd-a": "search::SelectAllMatches",
      "cmd-s": "search::ToggleSelection"
    }
  },
  {
    "context": "ProjectSearchBar && in_replace > Editor",
    "bindings": {
      "enter": "search::ReplaceNext",
      "shift-enter": "search::ReplaceAll"
    }
  },
  {
    // 大纲面板。
    // 加 not_editing 条件可以避免 rename 编辑时不能输入单字母绑定的按键。
    // 第一次打开大纲面板时焦点位于 Filter 输入框中，可以按 ctrl-n/p 来切换到 not_editing 模式。
    // 如果要使用单大写字母，如 N，需要使用 shift-n 绑定。
    "context": "OutlinePanel && not_editing",
    "bindings": {
      "escape": "menu::Cancel",
      "q": "workspace::ToggleLeftDock",
      // 在新 tab 中打开文件, 焦点还位于 outline panel。
      //"ctrl-o": "outline_panel::Open",
      //"tab": "outline_panel::Open",
      "o": ["outline_panel::Open", { "change_selection": false }],
      "tab": ["outline_panel::Open", { "change_selection": false }],
      // 在新 tab 中打开文件，将焦点移动到文件中。
      //"enter": ["outline_panel::Open", { "change_selection": true }],
      "enter": "outline_panel::Open",
      "n": "menu::SelectNext",
      "p": "menu::SelectPrev",
      "^": "outline_panel::SelectParent",
      // 路径操作(焦点必须位于文件或目录上）
      "w": "outline_panel::CopyPath",
      "shift-w": "outline_panel::CopyRelativePath",
      "r": "outline_panel::RevealInFileManager"
    }
  },
  {
    // 项目面板
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "escape": "menu::Cancel",
      "q": "workspace::ToggleLeftDock",
      // 目录展开/折叠
      "left": "project_panel::CollapseSelectedEntry",
      "right": "project_panel::ExpandSelectedEntry",
      // 打开操作
      // OpenPermanent 支持 toggle 展开和关闭, 在固定 tab 打开文件。
      "tab": "project_panel::OpenPermanent",
      "space": "project_panel::OpenPermanent",
      "o": "project_panel::OpenPermanent",
      "enter": "project_panel::OpenPermanent",
      // 在 preview tab 中打开文件
      "ctrl-o": "project_panel::Open",
      // 导航
      "n": "menu::SelectNext",
      "p": "menu::SelectPrev",
      "^": "project_panel::SelectParent",
      // 编辑
      "ctrl-w": "project_panel::Cut",
      "cmd-w": "project_panel::Copy",
      "ctrl-y": "project_panel::Paste",
      // 文件操作
      "+": "project_panel::NewDirectory",
      "shift-n": "project_panel::NewFile",
      "shift-r": "project_panel::Rename",
      "d": ["project_panel::Trash", { "skip_prompt": false }],
      "backspace": ["project_panel::Trash", { "skip_prompt": false }],
      // 路径操作（焦点必须位于目录或文件中）
      "w": "project_panel::CopyPath",
      "shift-w": "project_panel::CopyRelativePath",
      "r": "project_panel::RevealInFileManager",
      "ctrl-s": "project_panel::NewSearchInDirectory"
    }
  },
  {
    // FileFinder、ProjectFinder、Task 等带输入框和候选列表的面板。
    // 光标位于 FileFinder 输入框时，UI 层次是：FileFinder -> Picker > Editor。
    // Editor 的优先级比 Picker>Editor 低。
    "context": "Picker > Editor",
    "bindings": {
      // 选中候选者。如果焦点位于 task::Spawn 面板，则会在输入框中填写候选者命令配置, 可以修改它。
      "tab": "picker::ConfirmCompletion",

      // picker::ConfirmInput 目前（20241124）只在 task ui 中使用，下面两个命令也是专门为执行 task 定制的。
      // 不能绑定到 ctrl-enter/cmd-enter，否则会 break 其它使用 Picker Editor 的场景，如 file finder，
      // 它们使用 menu::SecondaryConfirm 而非 picker::ConfirmInput 命令。
      // 1. 执行 oneshot shell 命令，记录到 task history 中，后续可以执行 task: rerun 来重新执行。
      "alt-enter": ["picker::ConfirmInput", { "secondary": false }],
      // 2. 执行 Ephemeral tasks shell 命令，不会记录到 task history 中。
      "cmd-alt-enter": ["picker::ConfirmInput", { "secondary": true }]
    }
  },
  {
    // 光标位于 FileFinder 输入框时，UI 层次是：FileFinder -> Picker > Editor。
    "context": "FileFinder && !menu_open",
    "bindings": {
      "cmd-p": "file_finder::SelectPrev",
      // 打开目录
      "ctrl-o": "file_finder::ToggleMenu"
    }
  },
  {
    "context": "FileFinder && menu_open",
    "bindings": {
      "k": "pane::SplitUp",
      "j": "pane::SplitDown",
      "h": "pane::SplitLeft",
      "l": "pane::SplitRight"
    }
  },
  {
    // AI 助手面板
    "context": "AssistantPanel",
    "bindings": {
      "cmd-w": "assistant::CopyCode",
      "ctrl-s": "search::SelectNextMatch",
      "ctrl-r": "search::SelectPrevMatch",
      "cmd-m": "assistant::ToggleModelSelector",
      "ctrl-h": "assistant::DeployHistory",
      "ctrl-l": "assistant::DeployPromptLibrary",
      "ctrl-n": "assistant::NewContext"
    }
  },
  {
    // AI 上下文编辑
    "context": "ContextEditor > Editor",
    "bindings": {
      // 发送问题
      "cmd-enter": "assistant::Assist",
      // 将 Editor 选中内容粘贴到 assistant editor
      "ctrl-cmd-]": "assistant::QuoteSelection",
      // 将 assistant editor 选中内容粘贴到 Editor 中当前位置
      "ctrl-cmd-[": "assistant::InsertIntoEditor",
      // 插入新问题
      "shift-enter": "assistant::Split",
      // 切换角色
      "ctrl-r": "assistant::CycleMessageRole",

      "cmd-s": "workspace::Save",
      "enter": "assistant::ConfirmCommand",
      "alt-enter": "editor::Newline"
    }
  },
  {
    "context": "ProposedChangesEditor",
    "bindings": {
      // 与 Editor 中的按键保持一致。
      "alt-a": "editor::ApplyDiffHunk",
      "ctrl-alt-a": "editor::ApplyAllDiffHunks"
    }
  },
  {
    "context": "PromptLibrary",
    "bindings": {
      "cmd-n": "prompt_library::NewPrompt",
      "cmd-shift-s": "prompt_library::ToggleDefaultPrompt",
      "cmd-w": "workspace::CloseWindow"
    }
  },
  {
    "context": "TabSwitcher",
    "bindings": {
      "ctrl-p": "menu::SelectPrev",
      "ctrl-n": "menu::SelectNext",
      "ctrl-k": "tab_switcher::CloseSelectedItem"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "up": ["terminal::SendKeystroke", "up"],
      "down": ["terminal::SendKeystroke", "down"],
      "left": ["terminal::SendKeystroke", "left"],
      "right": ["terminal::SendKeystroke", "right"],
      "escape": ["terminal::SendKeystroke", "escape"],
      "enter": ["terminal::SendKeystroke", "enter"],
      "ctrl-c": ["terminal::SendKeystroke", "ctrl-c"],
      // ctrl-t 和 alt-c 是 fzf 默认快捷键。
      "ctrl-t": ["terminal::SendKeystroke", "ctrl-t"],
      "alt-c": ["terminal::SendKeystroke", "alt-c"],
      "ctrl-s": "buffer_search::Deploy",
      "cmd-enter": "workspace::NewTerminal",
      "cmd-b": ["terminal::SendText", "\u001bb"],
      "cmd-f": ["terminal::SendText", "\u001bf"],
      "cmd-w": "terminal::Copy",
      "cmd-c": "terminal::Copy",
      "cmd-v": "terminal::Paste",
      "ctrl-y": "terminal::Paste",
      "cmd-a": "editor::SelectAll",
      "ctrl-x h": "editor::SelectAll",
      "ctrl-l": "terminal::Clear",
      "shift-up": "terminal::ScrollLineUp",
      "shift-down": "terminal::ScrollLineDown",
      "ctrl-v": "terminal::ScrollPageDown",
      "ctrl-cmd-v": "terminal::ScrollPageUp",
      "cmd-<": "terminal::ScrollToTop",
      "cmd->": "terminal::ScrollToBottom",
      // AI inline 补全
      "ctrl-enter": "assistant::InlineAssist"
    }
  },
  {
    "context": "KeyContextView",
    "bindings": {
      "q": "pane::CloseActiveItem"
    }
  }
]
